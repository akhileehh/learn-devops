> Way to expose an application running on a set of Pods as a network service.Similar to Load Balancers
> Types

>>> 1.NODEPORT
#you should create a pod definition yaml file before creating service

apiVersion: vl
kind: Service
metadata:
  name: webapp-service
spec:
  type: Node Port
  ports:
  - targetPort: 80   // match it with the pod definition file containerPort
    port: 80
    nodePort: 30005
    protocol: TCP
  selector:
      app: frontend


$ kubectl create -f <svc-name.yml>
$ kubectl get svc
$ kubectl describe svc <name of svc>
  it automatically maps the end point to the containerport with given label
  to acces it on web copy the pub ip of master node with nodeport (192.168.56.12:30005)
----------------------------------------------------------------------------
>>> 2.Cluster ip

>>> 3.LoadBalancer

apiVersion: vl
kind: Service
metadata:
  name: helloworld-service
spec:
  ports:
   - port: 80
     targetPort: vproapp-port
     protocol: TCP
  selector:
     app: vproapp
  type: LoadBalancer
<

